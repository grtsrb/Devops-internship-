name: Python Web Application
on:
    push:
        branches:
            - application
jobs:
    testing:
        runs-on: ubuntu-latest
        services:
            postgres-database:
                image: postgres
                env:
                    POSTGRES_DB: ${{ vars.DATABASE_NAME }}
                    POSTGRES_USER: ${{ vars.DATABASE_USERNAME }}
                    POSTGRES_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
                ports:
                    - 5432:5432
        env:
            DATABASE_HOSTNAME: localhost
            DATABASE_NAME: ${{ vars.DATABASE_NAME }}
            DATABASE_PORT: ${{ vars.DATABASE_PORT }}
            DATABASE_USERNAME: ${{ vars.DATABASE_USERNAME }}
            DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
            SECRET_KEY: ${{ secrets.DATABASE_SECRET_KEY }}
            ALGORITHM: ${{ vars.DATABASE_ALGORITHM }}
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                ref: application
                token: ${{ secrets.PAT }}
            - name: Set up Python 3.9
              uses: actions/setup-python@v3
              with:
                python-version: "3.9"
            - name: Install depedencies
              run: |
                python -m pip install --upgrade pip
                pip install -r requirements.txt pytest
            - name: Update database
              run: alembic upgrade head
            - name: Test with pytest
              run: pytest tests/
    docker:
        runs-on: ubuntu-latest
        # needs: testing
        steps:
            - name: Checkout branch
              uses: actions/checkout@v4
              with:
                ref: application
                token: ${{ secrets.PAT }}
            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                username: ${{ vars.DOCKER_USERNAME }}
                password: ${{ secrets.DOCKER_PASSWORD }}
            - name: Build and push
              uses: docker/build-push-action@v5
              with: 
                push: true
                tags: grtalca/python-app:latest
    ssh:
        runs-on: ubuntu-latest
        # needs: docker
        steps:
            - name: Copy ssh key to dir
              run: |
                mkdir -p ~/.ssh
                echo "${{ secrets.PRIVATE_KEY }}" > ~/.ssh/id_key
                sudo chmod 600 ~/.ssh/id_key
              shell: bash
            - name: ssh to remote server and run script
              run: |
                 ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_key ubuntu@${{ vars.EC2_ADDRESS }}
                 docker pull grtalca/python-app
                 docker compose down
                 docker rm python-application
                 docker compose up -d